

Timer Component

--- Designer requirements & notes ---
We need a counter that does everything
It should have the ability to count up, down, stop, add to, etc
Needs to be simple to use and lightweight

Example of uses - I want to be able to take timer and apply it to a GUI font,
				- have it count down to a number, then trigger an event or game over,
				- Want some form of delay in it for weapons, button pushes, etc,
				- It should also be easy to add to time if you grab 'extra time' item,
				- We need to make it pause the complete game
				- Need to be able to grab time from start, level load, at any time
				- Some of the guys want to use bitmap images instead of ttf
				- Make it so!
 

Step 1: Tool Description
A set of funtions that allow for easy control of time (or class)
"Design a timer that will work with everything"


Step 2: Research
	- Time class and everything in it
	- Writing time to screen (GUI)
	- Making calls to Functions
	- Stopwatch (www.online-stopwatch.com)


Step 3: The Idea (Another approach to writing things out)
Details:
	- Attach the Time script to any object and use it's functions to control time;
	- We need a set of variables to hold minutes, seconds and fractions. While writing any game component, we want to use this to create a simple system that lets us find and use the start, stop and pause time easily. We need to have the ability to store current time, restore time, count down time from a specific amount, add to current time, delay things intermittently and find out when the game first started.


Functions:
	- Start timer;
	- From Start timer;
	- Stop timer;
	- Continue timer up;
	- Continue timer down;
	- Reset Timer;
	- Count down timer;
	- Delay timer;
	- Add to timer;
	- Since to start up timer;


Variables:
	- days;
	- hours
	- minutes
	- seconds
	- fractions
	- playTime
	- stopTime
	- nextTime
	- startTime
	- delayTime
	- delayedAmount
	- addToTimeAmount
	- countDownAmount
	- countDownDelay
	- elapsedTime
	- actualTime
	- buttonPressed
	- timeActive

Step 4: Write it already


















